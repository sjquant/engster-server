"""empty message

Revision ID: 30f57e0cdc6b
Revises: 
Create Date: 2020-10-25 20:03:52.687730

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '30f57e0cdc6b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('year', sa.String(length=4), nullable=False),
    sa.Column('poster', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('content_idx_id', 'content', ['id'], unique=False)
    op.create_index('content_idx_title', 'content', ['title'], unique=False)
    op.create_table('genre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('genre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('genre')
    )
    op.create_table('user',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('nickname', sa.String(length=10), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('photo', sa.String(length=255), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('nickname')
    )
    op.create_table('content_genre',
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ondelete='CASCADE'),
    sa.UniqueConstraint('content_id', 'genre_id', name='content_genre_unique')
    )
    op.create_table('line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('line', sa.Text(), nullable=False),
    sa.Column('time', sa.Time(), nullable=True),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('line_idx_id', 'line', ['id'], unique=False)
    op.create_index('line_idx_line', 'line', ['line'], unique=False)
    op.create_table('line_like',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('line_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['line_id'], ['line.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'line_id', name='line_like_unique')
    )
    op.create_index('line_like_idx_id', 'line_like', ['id'], unique=False)
    op.create_table('translation',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('translation', sa.Text(), nullable=False),
    sa.Column('line_id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['line_id'], ['line.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('translation_idx_id', 'translation', ['id'], unique=False)
    op.create_index('translation_idx_translation', 'translation', ['translation'], unique=False)
    op.create_table('translation_like',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('translation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['translation_id'], ['translation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'translation_id', name='translation_like_unique')
    )
    op.create_index('translation_like_idx_id', 'translation_like', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('translation_like_idx_id', table_name='translation_like')
    op.drop_table('translation_like')
    op.drop_index('translation_idx_translation', table_name='translation')
    op.drop_index('translation_idx_id', table_name='translation')
    op.drop_table('translation')
    op.drop_index('line_like_idx_id', table_name='line_like')
    op.drop_table('line_like')
    op.drop_index('line_idx_line', table_name='line')
    op.drop_index('line_idx_id', table_name='line')
    op.drop_table('line')
    op.drop_table('content_genre')
    op.drop_table('user')
    op.drop_table('genre')
    op.drop_index('content_idx_title', table_name='content')
    op.drop_index('content_idx_id', table_name='content')
    op.drop_table('content')
    # ### end Alembic commands ###
